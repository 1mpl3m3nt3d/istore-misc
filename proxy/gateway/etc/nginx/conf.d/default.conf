server {
  listen 80;
  listen [::]:80;

  server_name _;

  keepalive_timeout 5;

  client_max_body_size 1M;
  client_body_buffer_size 256k;
  client_body_timeout 5; # must read the body in 5 seconds

  access_log 'logs/_.access.log' main;

  #root /usr/share/nginx/html;

  location / {

    # force SSL / redirect http -> https
    #if ($http_x_forwarded_proto != "https") {
    #  return 301 https://$host$request_uri;
    #}

    proxy_pass http://host.docker.internal:5001 weight=1 fail_timeout=0;
    #proxy_pass http://unix:/tmp/nginx.socket weight=1 fail_timeout=0;

    #try_files $uri $uri/ $uri.html =404;

    proxy_redirect off;

    proxy_http_version 1.1;

    #proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header Upgrade-Insecure-Requests 1;

    proxy_set_header Connection keep-alive;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;

    #proxy_set_header Access-Control-Allow-Origin '*';
    #proxy_set_header Access-Control-Allow-Headers '*';
    #proxy_set_header Access-Control-Allow-Methods 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT';

    #proxy_cache_bypass $http_upgrade;

    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;

    proxy_buffers 32 512k;
    proxy_buffer_size 512k;
  }

  location /basket/swagger {
    return 301 http://host.docker.internal:5003/swagger;
  }

  location /catalog/swagger {
    return 301 http://host.docker.internal:5000/swagger;
  }

  location /identity {
    return 301 http://host.docker.internal:5002;
  }

  location /pgadmin {
    return 301 http://host.docker.internal:8001/login;
  }

  location /assets/images {
    alias /var/www/assets/images;
  }
}
